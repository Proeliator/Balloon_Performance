function Dyna_Tank_Mass_Calc()


    % Add the UI components
    hs = addcomponents();
    hs = setupCallbacks(hs);
    setdefaultvals(hs);
    
    % Make figure visible after adding components
    hs.fig.Visible = 'on';
    
     function hs = addcomponents()

        % create figure
        hs.fig = figure(...
        'Units','characters',...
        'Position',[3.0 13.0 184.5 55.5],...
        'Visible','on',...
        'Color',get(0,'defaultfigureColor'),...
        'IntegerHandle','off',...
        'Colormap',[0 0 0.5625;0 0 0.625;0 0 0.6875;0 0 0.75;0 0 0.8125;0 0 0.875;0 0 0.9375;0 0 1;0 0.0625 1;0 0.125 1;0 0.1875 1;0 0.25 1;0 0.3125 1;0 0.375 1;0 0.4375 1;0 0.5 1;0 0.5625 1;0 0.625 1;0 0.6875 1;0 0.75 1;0 0.8125 1;0 0.875 1;0 0.9375 1;0 1 1;0.0625 1 1;0.125 1 0.9375;0.1875 1 0.875;0.25 1 0.8125;0.3125 1 0.75;0.375 1 0.6875;0.4375 1 0.625;0.5 1 0.5625;0.5625 1 0.5;0.625 1 0.4375;0.6875 1 0.375;0.75 1 0.3125;0.8125 1 0.25;0.875 1 0.1875;0.9375 1 0.125;1 1 0.0625;1 1 0;1 0.9375 0;1 0.875 0;1 0.8125 0;1 0.75 0;1 0.6875 0;1 0.625 0;1 0.5625 0;1 0.5 0;1 0.4375 0;1 0.375 0;1 0.3125 0;1 0.25 0;1 0.1875 0;1 0.125 0;1 0.0625 0;1 0 0;0.9375 0 0;0.875 0 0;0.8125 0 0;0.75 0 0;0.6875 0 0;0.625 0 0;0.5625 0 0],...
        'Name','BalloonGUI',...
        'NumberTitle','off',...
        'Tag','figure1',...
        'UserData',[],...
        'resize', 'off', ...
        'PaperPosition',get(0,'defaultfigurePaperPosition'),...
        'InvertHardcopy',get(0,'defaultfigureInvertHardcopy'),...
        'ScreenPixelsPerInchMode','manual',...
        'HandleVisibility','callback','MenuBar','none','Toolbar','figure');
    
        % modify toolbar buttons to remove ones we dont want
        buttons_to_remove = {'New Figure',...
            'Print Figure','Edit Plot','Rotate 3D','Insert Legend','Insert Colorbar'};
        for i = 1:length(buttons_to_remove)
            btn_handle = findall(hs.fig,'ToolTipString',buttons_to_remove{i});
            set(btn_handle,'Visible','Off')
        end
        clear btn_handle buttons_to_remove
        
        %Make Save and Load Buttons Do What they do
        hs.save = findall(hs.fig,'ToolTipString','Save Figure');
        hs.load = findall(hs.fig,'ToolTipString','Open File');
        
        
        
        % add custom menu options
        hs.BalloonMenu = uimenu(...
        'Parent',hs.fig,...
        'Callback',@(hObject,eventdata)BalloonGUI_export('Title_1_Callback',hObject,eventdata,guidata(hObject)),...
        'Label','Balloon Performance Calculations',...
        'Tag','Title_1'...
         );

        hs.BalloonMenuCalcBtn = uimenu(...
            'Parent',hs.BalloonMenu,...
            'Label','Calculate');
        hs.BalloonMenuPlotBtn = uimenu(...
            'Parent',hs.BalloonMenu,...
            'Label','Plot');
        hs.BalloonMenuPlotBtn = uimenu(...
            'Parent',hs.BalloonMenu,...
            'Label','Close');
        
        hs.TankMassCalcPanel = uipanel(...
        'Parent',hs.fig,...
        'FontUnits',get(0,'defaultuipanelFontUnits'),...
        'Units','characters',...
        'TitlePosition','centertop',...
        'Title','Tank Mass Calculator',...
        'Position',[101.8 40 63 15.25],...
        'Tag','TankMassCalcPanel',...
        'Clipping','off'...
         );

        appdata = [];
        appdata.lastValidTag = 'Tank1';
        appdata.PropertyMetaData = {  {  'DataPropertyDimension' 'DataPropertyConditionedDimension' 'DataPropertySource' 'BackgroundColorPropertyDimension' 'ColumnNameTyped' 'RowNameTyped' } {  [] [] 'DataExisting' [] {  'Tank 1 Start' 'Tank 1 End' } {  'Pressure' 'Temperature' } } };

        hs.Tank1Table = uitable(...
        'Parent',hs.TankMassCalcPanel,...
        'Units','characters',...
        'BackgroundColor',[1 1 1;0.96078431372549 0.96078431372549 0.96078431372549],...
        'ColumnName',{  'Tank 1 Start'; 'Tank 1 End' },...
        'ColumnWidth',{  'auto' 'auto' },...
        'RowName',{  'Pressure'; 'Temperature' },...
        'Position',[3.8 9 55.2 4.7],...
        'ColumnEditable',[true true],...
        'ColumnFormat',{  [] [] },...
        'Data',[2500 100;70 60],...
        'Children',[],...
        'Tag','Tank1',...
        'UserData',[]...
         );

        appdata = [];
        appdata.lastValidTag = 'Tank2';
        appdata.PropertyMetaData = {  {  'DataPropertyDimension' 'DataPropertyConditionedDimension' 'DataPropertySource' 'BackgroundColorPropertyDimension' 'ColumnNameTyped' 'RowNameTyped' } {  [] [] 'DataExisting' [] {  'Tank 2 Start' 'Tank 2 End' } {  'Pressure' 'Temperature' } } };

        hs.Tank2Table = uitable(...
        'Parent',hs.TankMassCalcPanel,...
        'Units','characters',...
        'ColumnName',{  'Tank 2 Start'; 'Tank 2 End' },...
        'ColumnWidth',{  'auto' 'auto' },...
        'RowName',{  'Pressure'; 'Temperature' },...
        'Position',[3.8 4 55.2 4.7],...
        'ColumnEditable',[true true],...
        'ColumnFormat',{  [] [] },...
        'Data',[2500 100;70 60],...
        'Children',[],...
        'Tag','Tank2',...
        'UserData',[]...
         );

        hs.TankCalcBtn = uicontrol(...
        'Parent',hs.TankMassCalcPanel,...
        'FontUnits',get(0,'defaultuicontrolFontUnits'),...
        'Units','characters',...
        'String','Calculate',...
        'Position',[3.6 0.5 22.4 2.23076923076923],...
        'Children',[],...
        'Tag','HeliumTankCalc'...
         );
     
        hs.TankMassValueLabel = uicontrol(...
        'Parent',hs.TankMassCalcPanel,...
        'FontUnits',get(0,'defaultuicontrolFontUnits'),...
        'Units','characters',...
        'String','0',...
        'Style','text',...
        'Position',[30 1.0 12.2 1.15384615384615],...
        'Children',[],...
        'Tag','HeliumTankMass'...
         );

        hs.TankMassLabel = uicontrol(...
        'Parent',hs.TankMassCalcPanel,...
        'FontUnits',get(0,'defaultuicontrolFontUnits'),...
        'Units','characters',...
        'String','kg',...
        'Style','text',...
        'Position',[40 1.0 2.8 1.15384615384615],...
        'Children',[],...
        'Tag','text27'...
         );

       
     end
    function hs = setupCallbacks(hs)
    % adds callbacks to ui elements   
    % Note: callbacks must be setup after handle structure is fully
    % initalized
    
        set(hs.TankCalcBtn,'Callback',{@HeliumTankCalc_Callback,hs});
        set(hs.CalcButton,'Callback',{@RunCalcs_Callback,hs});
        set(hs.PlotButton,'Callback',{@GenPlots_Callback,hs});
        set(hs.BalloonMenuCalcBtn,'Callback',{@GenPlots_Callback,hs});
        set(hs.BalloonMenuPlotBtn,'Callback',{@GenPlots_Callback,hs});
        set(hs.BalloonMenuPlotBtn,'Callback',{@closefcn,hs});
        set(hs.save,'ClickedCallback',{@savebutton,hs});
        set(hs.load,'ClickedCallback',{@loadbutton,hs});
    end

    function closefcn(~,~,hs)
    % callback for closing the window
    
        close(hs.fig);
    end

    function HeliumTankCalc_Callback(~,~,hs)
    % performs helium tank calculations

        Tank1 = get(hs.Tank1Table,'data');
        Tank2 = get(hs.Tank2Table,'data');
        TankMass1 = HeliumMassCalc(Tank1(1,1),Tank1(1,2),Tank1(2,1),Tank1(2,2));
        TankMass2 = HeliumMassCalc(Tank2(1,1),Tank2(1,2),Tank2(2,1),Tank2(2,2));
        HeliumTankMass = TankMass1 + TankMass2;
        set(hs.TankMassValueLabel, 'String', HeliumTankMass )
    end
 
    
end