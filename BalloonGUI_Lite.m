%Generates a GUI for use in Balloon Performance Analysis
%
%Tank Mass Calculator uses HeliumMassCalc for mass of helium
%The calculate button runs indepedently to calculate the mass
%
%AWOS Data is from an airport's Automated Weather Observing Station, 
%
%Local Data is measurements taken on-site with on-site equipment. The 
%pressure reading must be absolute/station pressure, not adjusted to be sea
%level pressure. 
%
%Payload Weight is given in pounds
%
%The Calculate button runs all the calculations and updates the tables
%The Plot button runs the calculations and plots the burst data
%
%Dependencies:
%HeliumMassCalc, AWOSMethod, LocalMethod
%   and by extention:
% MoistDensity, StandAtmo1976, CustomStandAtmo1976
% 
%Base Program provided by Steve Lente
%Edited By Michael Walker
function BalloonGUI_Lite()


    % Add the UI components
    hs = addcomponents();
    hs = setupCallbacks(hs);
    setdefaultvals(hs);
    
    % Make figure visible after adding components
    hs.fig.Visible = 'on';

    function hs = addcomponents()

        % create figure
        hs.fig = figure(...
        'Units','characters',...
        'Position',[3.0 13.0 184.5 55.5],...
        'Visible','on',...
        'Color',get(0,'defaultfigureColor'),...
        'IntegerHandle','off',...
        'Colormap',[0 0 0.5625;0 0 0.625;0 0 0.6875;0 0 0.75;0 0 0.8125;0 0 0.875;0 0 0.9375;0 0 1;0 0.0625 1;0 0.125 1;0 0.1875 1;0 0.25 1;0 0.3125 1;0 0.375 1;0 0.4375 1;0 0.5 1;0 0.5625 1;0 0.625 1;0 0.6875 1;0 0.75 1;0 0.8125 1;0 0.875 1;0 0.9375 1;0 1 1;0.0625 1 1;0.125 1 0.9375;0.1875 1 0.875;0.25 1 0.8125;0.3125 1 0.75;0.375 1 0.6875;0.4375 1 0.625;0.5 1 0.5625;0.5625 1 0.5;0.625 1 0.4375;0.6875 1 0.375;0.75 1 0.3125;0.8125 1 0.25;0.875 1 0.1875;0.9375 1 0.125;1 1 0.0625;1 1 0;1 0.9375 0;1 0.875 0;1 0.8125 0;1 0.75 0;1 0.6875 0;1 0.625 0;1 0.5625 0;1 0.5 0;1 0.4375 0;1 0.375 0;1 0.3125 0;1 0.25 0;1 0.1875 0;1 0.125 0;1 0.0625 0;1 0 0;0.9375 0 0;0.875 0 0;0.8125 0 0;0.75 0 0;0.6875 0 0;0.625 0 0;0.5625 0 0],...
        'Name','BalloonGUI',...
        'NumberTitle','off',...
        'Tag','figure1',...
        'UserData',[],...
        'resize', 'off', ...
        'PaperPosition',get(0,'defaultfigurePaperPosition'),...
        'InvertHardcopy',get(0,'defaultfigureInvertHardcopy'),...
        'ScreenPixelsPerInchMode','manual',...
        'HandleVisibility','callback','MenuBar','none','Toolbar','figure');
    
        % modify toolbar buttons to remove ones we dont want
        buttons_to_remove = {'New Figure',...
            'Print Figure','Edit Plot','Rotate 3D','Insert Legend','Insert Colorbar'};
        for i = 1:length(buttons_to_remove)
            btn_handle = findall(hs.fig,'ToolTipString',buttons_to_remove{i});
            set(btn_handle,'Visible','Off')
        end
        clear btn_handle buttons_to_remove
        
        %Make Save and Load Buttons Do What they do
        hs.save = findall(hs.fig,'ToolTipString','Save Figure');
        hs.load = findall(hs.fig,'ToolTipString','Open File');
        
        
        
        % add custom menu options
        hs.BalloonMenu = uimenu(...
        'Parent',hs.fig,...
        'Callback',@(hObject,eventdata)BalloonGUI_export('Title_1_Callback',hObject,eventdata,guidata(hObject)),...
        'Label','Balloon Performance Calculations',...
        'Tag','Title_1'...
         );

        hs.BalloonMenuCalcBtn = uimenu(...
            'Parent',hs.BalloonMenu,...
            'Label','Calculate');
        hs.BalloonMenuPlotBtn = uimenu(...
            'Parent',hs.BalloonMenu,...
            'Label','Plot');
        hs.BalloonMenuPlotBtn = uimenu(...
            'Parent',hs.BalloonMenu,...
            'Label','Close');
        
        % Initalize Axes
        hs.FeetAltDiameter = axes(...
        'Parent',hs.fig,...
        'FontUnits',get(0,'defaultaxesFontUnits'),...
        'Units','characters',...
        'CameraPosition',[0.5 0.5 9.16025403784439],...
        'CameraPositionMode',get(0,'defaultaxesCameraPositionMode'),...
        'CameraTarget',[0.5 0.5 0.5],...
        'CameraTargetMode',get(0,'defaultaxesCameraTargetMode'),...
        'CameraViewAngle',6.60861036031192,...
        'CameraViewAngleMode',get(0,'defaultaxesCameraViewAngleMode'),...
        'PlotBoxAspectRatio',[1 0.869458128078818 0.869458128078818],...
        'PlotBoxAspectRatioMode',get(0,'defaultaxesPlotBoxAspectRatioMode'),...
        'XTick',[0 0.2 0.4 0.6 0.8 1],...
        'XTickMode',get(0,'defaultaxesXTickMode'),...
        'XTickLabel',{  '0'; '0.2'; '0.4'; '0.6'; '0.8'; '1' },...
        'XTickLabelMode',get(0,'defaultaxesXTickLabelMode'),...
        'YTick',[0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1],...
        'YTickMode',get(0,'defaultaxesYTickMode'),...
        'YTickLabel',{  '0'; '0.1'; '0.2'; '0.3'; '0.4'; '0.5'; '0.6'; '0.7'; '0.8'; '0.9'; '1' },...
        'YTickLabelMode',get(0,'defaultaxesYTickLabelMode'),...
        'Color',get(0,'defaultaxesColor'),...
        'CameraMode',get(0,'defaultaxesCameraMode'),...
        'DataSpaceMode',get(0,'defaultaxesDataSpaceMode'),...
        'ColorSpaceMode',get(0,'defaultaxesColorSpaceMode'),...
        'DecorationContainerMode',get(0,'defaultaxesDecorationContainerMode'),...
        'ChildContainerMode',get(0,'defaultaxesChildContainerMode'),...
        'XGridHandleMode',get(0,'defaultaxesXGridHandleMode'),...
        'YGridHandleMode',get(0,'defaultaxesYGridHandleMode'),...
        'XRulerMode',get(0,'defaultaxesXRulerMode'),...
        'XBaselineMode',get(0,'defaultaxesXBaselineMode'),...
        'YRulerMode',get(0,'defaultaxesYRulerMode'),...
        'YBaselineMode',get(0,'defaultaxesYBaselineMode'),...
        'ZRulerMode',get(0,'defaultaxesZRulerMode'),...
        'ZBaselineMode',get(0,'defaultaxesZBaselineMode'),...
        'AmbientLightSourceMode',get(0,'defaultaxesAmbientLightSourceMode'),...
        'XGrid','on',...
        'YGrid','on',...
        'Tag','FeetAltDiameter',...
        'Position',[10.1 4 81.2 27.1538461538462],...
        'ActivePositionProperty','position',...
        'ActivePositionPropertyMode',get(0,'defaultaxesActivePositionPropertyMode'),...
        'LooseInset',[20.124 7.55615384615385 14.706 5.15192307692308],...
        'SortMethod','childorder',...
        'SortMethodMode',get(0,'defaultaxesSortMethodMode'),...
        'NextPlot','add'...
         );
% 'CreateFcn', {@local_CreateFcn, blanks(0), appdata}

        h3 = get(hs.FeetAltDiameter,'title');

        set(h3,...
        'Parent',hs.FeetAltDiameter,...
        'Units','data',...
        'FontUnits','points',...
        'DecorationContainer',[],...
        'DecorationContainerMode','auto',...
        'Color',[0 0 0],...
        'ColorMode','auto',...
        'Position',[0.5 1.0 0.5],...
        'PositionMode','auto',...
        'String',blanks(0),...
        'Interpreter','tex',...
        'Rotation',0,...
        'RotationMode','auto',...
        'FontName','Helvetica',...
        'FontSize',10,...
        'FontAngle','normal',...
        'FontWeight','normal',...
        'HorizontalAlignment','center',...
        'HorizontalAlignmentMode','auto',...
        'VerticalAlignment','bottom',...
        'VerticalAlignmentMode','auto',...
        'EdgeColor','none',...
        'LineStyle','-',...
        'LineWidth',0.5,...
        'BackgroundColor','none',...
        'Margin',1,...
        'Clipping','off',...
        'Layer','middle',...
        'LayerMode','auto',...
        'FontSmoothing','on',...
        'FontSmoothingMode','auto',...
        'DisplayName',blanks(0),...
        'IncludeRenderer','on',...
        'IsContainer','off',...
        'IsContainerMode','auto',...
        'HelpTopicKey',blanks(0),...
        'ButtonDownFcn',blanks(0),...
        'BusyAction','queue',...
        'Interruptible','on',...
        'DeleteFcn',blanks(0),...
        'Tag',blanks(0),...
        'HitTest','on',...
        'PickableParts','visible',...
        'PickablePartsMode','auto',...
        'XLimInclude','on',...
        'YLimInclude','on',...
        'ZLimInclude','on',...
        'CLimInclude','on',...
        'ALimInclude','on',...
        'Description','Axes Title',...
        'DescriptionMode','auto',...
        'Visible','on',...
        'Serializable','on',...
        'HandleVisibility','off',...
        'TransformForPrintFcnImplicitInvoke','on',...
        'TransformForPrintFcnImplicitInvokeMode','auto');
%          ,...

        h4 = get(hs.FeetAltDiameter,'xlabel');

        set(h4,...
        'Parent',hs.FeetAltDiameter,...
        'Units','data',...
        'FontUnits','points',...
        'DecorationContainer',[],...
        'DecorationContainerMode','auto',...
        'Color',[0 0 0],...
        'ColorMode','auto',...
        'Position',[0.500000476837158 -0.0670443800567344 7.105427357601e-15],...
        'PositionMode','auto',...
        'String',blanks(0),...
        'Interpreter','tex',...
        'Rotation',0,...
        'RotationMode','auto',...
        'FontName','Helvetica',...
        'FontSize',10,...
        'FontAngle','normal',...
        'FontWeight','normal',...
        'HorizontalAlignment','center',...
        'HorizontalAlignmentMode','auto',...
        'VerticalAlignment','top',...
        'VerticalAlignmentMode','auto',...
        'EdgeColor','none',...
        'LineStyle','-',...
        'LineWidth',0.5,...
        'BackgroundColor','none',...
        'Margin',1,...
        'Clipping','off',...
        'Layer','back',...
        'LayerMode','auto',...
        'FontSmoothing','on',...
        'FontSmoothingMode','auto',...
        'DisplayName',blanks(0),...
        'IncludeRenderer','on',...
        'IsContainer','off',...
        'IsContainerMode','auto',...
        'HelpTopicKey',blanks(0),...
        'ButtonDownFcn',blanks(0),...
        'BusyAction','queue',...
        'Interruptible','on',...
        'DeleteFcn',blanks(0),...
        'Tag',blanks(0),...
        'HitTest','on',...
        'PickableParts','visible',...
        'PickablePartsMode','auto',...
        'XLimInclude','on',...
        'YLimInclude','on',...
        'ZLimInclude','on',...
        'CLimInclude','on',...
        'ALimInclude','on',...
        'Description','AxisRulerBase Label',...
        'DescriptionMode','auto',...
        'Visible','on',...
        'Serializable','on',...
        'HandleVisibility','off',...
        'TransformForPrintFcnImplicitInvoke','on',...
        'TransformForPrintFcnImplicitInvokeMode','auto');
%          ,...

        h5 = get(hs.FeetAltDiameter,'ylabel');

        set(h5,...
        'Parent',hs.FeetAltDiameter,...
        'Units','data',...
        'FontUnits','points',...
        'DecorationContainer',[],...
        'DecorationContainerMode','auto',...
        'Color',[0 0 0],...
        'ColorMode','auto',...
        'Position',[-0.0697865339090868 0.500000476837158 7.105427357601e-15],...
        'PositionMode','auto',...
        'String',blanks(0),...
        'Interpreter','tex',...
        'Rotation',90,...
        'RotationMode','auto',...
        'FontName','Helvetica',...
        'FontSize',10,...
        'FontAngle','normal',...
        'FontWeight','normal',...
        'HorizontalAlignment','center',...
        'HorizontalAlignmentMode','auto',...
        'VerticalAlignment','bottom',...
        'VerticalAlignmentMode','auto',...
        'EdgeColor','none',...
        'LineStyle','-',...
        'LineWidth',0.5,...
        'BackgroundColor','none',...
        'Margin',1,...
        'Clipping','off',...
        'Layer','back',...
        'LayerMode','auto',...
        'FontSmoothing','on',...
        'FontSmoothingMode','auto',...
        'DisplayName',blanks(0),...
        'IncludeRenderer','on',...
        'IsContainer','off',...
        'IsContainerMode','auto',...
        'HelpTopicKey',blanks(0),...
        'ButtonDownFcn',blanks(0),...
        'BusyAction','queue',...
        'Interruptible','on',...
        'DeleteFcn',blanks(0),...
        'Tag',blanks(0),...
        'HitTest','on',...
        'PickableParts','visible',...
        'PickablePartsMode','auto',...
        'XLimInclude','on',...
        'YLimInclude','on',...
        'ZLimInclude','on',...
        'CLimInclude','on',...
        'ALimInclude','on',...
        'Description','AxisRulerBase Label',...
        'DescriptionMode','auto',...
        'Visible','on',...
        'Serializable','on',...
        'HandleVisibility','off',...
        'TransformForPrintFcnImplicitInvoke','on',...
        'TransformForPrintFcnImplicitInvokeMode','auto');

        h6 = get(hs.FeetAltDiameter,'zlabel');

        set(h6,...
        'Parent',hs.FeetAltDiameter,...
        'Units','data',...
        'FontUnits','points',...
        'DecorationContainer',[],...
        'DecorationContainerMode','auto',...
        'Color',[0 0 0],...
        'ColorMode','auto',...
        'Position',[0 0 0],...
        'PositionMode','auto',...
        'String',blanks(0),...
        'Interpreter','tex',...
        'Rotation',0,...
        'RotationMode','auto',...
        'FontName','Helvetica',...
        'FontSize',10,...
        'FontAngle','normal',...
        'FontWeight','normal',...
        'HorizontalAlignment','right',...
        'HorizontalAlignmentMode','auto',...
        'VerticalAlignment','middle',...
        'VerticalAlignmentMode','auto',...
        'EdgeColor','none',...
        'LineStyle','-',...
        'LineWidth',0.5,...
        'BackgroundColor','none',...
        'Margin',1,...
        'Clipping','off',...
        'Layer','middle',...
        'LayerMode','auto',...
        'FontSmoothing','on',...
        'FontSmoothingMode','auto',...
        'DisplayName',blanks(0),...
        'IncludeRenderer','on',...
        'IsContainer','off',...
        'IsContainerMode','auto',...
        'HelpTopicKey',blanks(0),...
        'ButtonDownFcn',blanks(0),...
        'BusyAction','queue',...
        'Interruptible','on',...
        'DeleteFcn',blanks(0),...
        'Tag',blanks(0),...
        'HitTest','on',...
        'PickableParts','visible',...
        'PickablePartsMode','auto',...
        'XLimInclude','on',...
        'YLimInclude','on',...
        'ZLimInclude','on',...
        'CLimInclude','on',...
        'ALimInclude','on',...
        'Description','AxisRulerBase Label',...
        'DescriptionMode','auto',...
        'Visible','off',...
        'Serializable','on',...
        'HandleVisibility','off',...
        'TransformForPrintFcnImplicitInvoke','on',...
        'TransformForPrintFcnImplicitInvokeMode','auto');


        hs.MeterAltDiameter = axes(...
        'Parent',hs.fig,...
        'FontUnits',get(0,'defaultaxesFontUnits'),...
        'Units','characters',...
        'CameraPosition',[0.5 0.5 9.16025403784439],...
        'CameraPositionMode',get(0,'defaultaxesCameraPositionMode'),...
        'CameraTarget',[0.5 0.5 0.5],...
        'CameraTargetMode',get(0,'defaultaxesCameraTargetMode'),...
        'CameraViewAngle',6.60861036031192,...
        'CameraViewAngleMode',get(0,'defaultaxesCameraViewAngleMode'),...
        'PlotBoxAspectRatio',[1 0.869458128078818 0.869458128078818],...
        'PlotBoxAspectRatioMode',get(0,'defaultaxesPlotBoxAspectRatioMode'),...
        'XTick',[0 0.2 0.4 0.6 0.8 1],...
        'XTickMode',get(0,'defaultaxesXTickMode'),...
        'XTickLabel',{  '0'; '0.2'; '0.4'; '0.6'; '0.8'; '1' },...
        'XTickLabelMode',get(0,'defaultaxesXTickLabelMode'),...
        'YTick',[0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1],...
        'YTickMode',get(0,'defaultaxesYTickMode'),...
        'YTickLabel',{  '0'; '0.1'; '0.2'; '0.3'; '0.4'; '0.5'; '0.6'; '0.7'; '0.8'; '0.9'; '1' },...
        'YTickLabelMode',get(0,'defaultaxesYTickLabelMode'),...
        'Color',get(0,'defaultaxesColor'),...
        'CameraMode',get(0,'defaultaxesCameraMode'),...
        'DataSpaceMode',get(0,'defaultaxesDataSpaceMode'),...
        'ColorSpaceMode',get(0,'defaultaxesColorSpaceMode'),...
        'DecorationContainerMode',get(0,'defaultaxesDecorationContainerMode'),...
        'ChildContainerMode',get(0,'defaultaxesChildContainerMode'),...
        'XRulerMode',get(0,'defaultaxesXRulerMode'),...
        'XBaselineMode',get(0,'defaultaxesXBaselineMode'),...
        'YRulerMode',get(0,'defaultaxesYRulerMode'),...
        'YBaselineMode',get(0,'defaultaxesYBaselineMode'),...
        'ZRulerMode',get(0,'defaultaxesZRulerMode'),...
        'ZBaselineMode',get(0,'defaultaxesZBaselineMode'),...
        'AmbientLightSourceMode',get(0,'defaultaxesAmbientLightSourceMode'),...
        'XGrid','on',...
        'YGrid','on',...
        'Tag','MeterAltDiameter',...
        'Position',[100.1 4 81.2 27.1538461538462],...
        'ActivePositionProperty','position',...
        'ActivePositionPropertyMode',get(0,'defaultaxesActivePositionPropertyMode'),...
        'LooseInset',[20.124 7.55615384615385 14.706 5.15192307692308],...
        'SortMethod','childorder',...
        'SortMethodMode',get(0,'defaultaxesSortMethodMode')...
         );

        h8 = get(hs.MeterAltDiameter,'title');

        set(h8,...
        'Parent',hs.MeterAltDiameter,...
        'Units','data',...
        'FontUnits','points',...
        'DecorationContainer',[],...
        'DecorationContainerMode','auto',...
        'Color',[0 0 0],...
        'ColorMode','auto',...
        'Position',[0.500001651312917 1.0070821529745 0.500000000000007],...
        'PositionMode','auto',...
        'String',blanks(0),...
        'Interpreter','tex',...
        'Rotation',0,...
        'RotationMode','auto',...
        'FontName','Helvetica',...
        'FontSize',10,...
        'FontAngle','normal',...
        'FontWeight','normal',...
        'HorizontalAlignment','center',...
        'HorizontalAlignmentMode','auto',...
        'VerticalAlignment','bottom',...
        'VerticalAlignmentMode','auto',...
        'EdgeColor','none',...
        'LineStyle','-',...
        'LineWidth',0.5,...
        'BackgroundColor','none',...
        'Margin',1,...
        'Clipping','off',...
        'Layer','middle',...
        'LayerMode','auto',...
        'FontSmoothing','on',...
        'FontSmoothingMode','auto',...
        'DisplayName',blanks(0),...
        'IncludeRenderer','on',...
        'IsContainer','off',...
        'IsContainerMode','auto',...
        'HelpTopicKey',blanks(0),...
        'ButtonDownFcn',blanks(0),...
        'BusyAction','queue',...
        'Interruptible','on',...
        'DeleteFcn',blanks(0),...
        'Tag',blanks(0),...
        'HitTest','on',...
        'PickableParts','visible',...
        'PickablePartsMode','auto',...
        'XLimInclude','on',...
        'YLimInclude','on',...
        'ZLimInclude','on',...
        'CLimInclude','on',...
        'ALimInclude','on',...
        'Description','Axes Title',...
        'DescriptionMode','auto',...
        'Visible','on',...
        'Serializable','on',...
        'HandleVisibility','off',...
        'TransformForPrintFcnImplicitInvoke','on',...
        'TransformForPrintFcnImplicitInvokeMode','auto');
%          ,...

        h9 = get(hs.MeterAltDiameter,'xlabel');

        set(h9,...
        'Parent',hs.MeterAltDiameter,...
        'Units','data',...
        'FontUnits','points',...
        'DecorationContainer',[],...
        'DecorationContainerMode','auto',...
        'Color',[0 0 0],...
        'ColorMode','auto',...
        'Position',[0.500000476837158 -0.0670443800567344 7.105427357601e-15],...
        'PositionMode','auto',...
        'String',blanks(0),...
        'Interpreter','tex',...
        'Rotation',0,...
        'RotationMode','auto',...
        'FontName','Helvetica',...
        'FontSize',10,...
        'FontAngle','normal',...
        'FontWeight','normal',...
        'HorizontalAlignment','center',...
        'HorizontalAlignmentMode','auto',...
        'VerticalAlignment','top',...
        'VerticalAlignmentMode','auto',...
        'EdgeColor','none',...
        'LineStyle','-',...
        'LineWidth',0.5,...
        'BackgroundColor','none',...
        'Margin',1,...
        'Clipping','off',...
        'Layer','back',...
        'LayerMode','auto',...
        'FontSmoothing','on',...
        'FontSmoothingMode','auto',...
        'DisplayName',blanks(0),...
        'IncludeRenderer','on',...
        'IsContainer','off',...
        'IsContainerMode','auto',...
        'HelpTopicKey',blanks(0),...
        'ButtonDownFcn',blanks(0),...
        'BusyAction','queue',...
        'Interruptible','on',...
        'DeleteFcn',blanks(0),...
        'Tag',blanks(0),...
        'HitTest','on',...
        'PickableParts','visible',...
        'PickablePartsMode','auto',...
        'XLimInclude','on',...
        'YLimInclude','on',...
        'ZLimInclude','on',...
        'CLimInclude','on',...
        'ALimInclude','on',...
        'Description','AxisRulerBase Label',...
        'DescriptionMode','auto',...
        'Visible','on',...
        'Serializable','on',...
        'HandleVisibility','off',...
        'TransformForPrintFcnImplicitInvoke','on',...
        'TransformForPrintFcnImplicitInvokeMode','auto');

        hs.fig0 = get(hs.MeterAltDiameter,'ylabel');

        set(hs.fig0,...
        'Parent',hs.MeterAltDiameter,...
        'Units','data',...
        'FontUnits','points',...
        'DecorationContainer',[],...
        'DecorationContainerMode','auto',...
        'Color',[0 0 0],...
        'ColorMode','auto',...
        'Position',[-0.0697865339090866 0.500000476837158 7.105427357601e-15],...
        'PositionMode','auto',...
        'String',blanks(0),...
        'Interpreter','tex',...
        'Rotation',90,...
        'RotationMode','auto',...
        'FontName','Helvetica',...
        'FontSize',10,...
        'FontAngle','normal',...
        'FontWeight','normal',...
        'HorizontalAlignment','center',...
        'HorizontalAlignmentMode','auto',...
        'VerticalAlignment','bottom',...
        'VerticalAlignmentMode','auto',...
        'EdgeColor','none',...
        'LineStyle','-',...
        'LineWidth',0.5,...
        'BackgroundColor','none',...
        'Margin',1,...
        'Clipping','off',...
        'Layer','back',...
        'LayerMode','auto',...
        'FontSmoothing','on',...
        'FontSmoothingMode','auto',...
        'DisplayName',blanks(0),...
        'IncludeRenderer','on',...
        'IsContainer','off',...
        'IsContainerMode','auto',...
        'HelpTopicKey',blanks(0),...
        'ButtonDownFcn',blanks(0),...
        'BusyAction','queue',...
        'Interruptible','on',...
        'DeleteFcn',blanks(0),...
        'Tag',blanks(0),...
        'HitTest','on',...
        'PickableParts','visible',...
        'PickablePartsMode','auto',...
        'XLimInclude','on',...
        'YLimInclude','on',...
        'ZLimInclude','on',...
        'CLimInclude','on',...
        'ALimInclude','on',...
        'Description','AxisRulerBase Label',...
        'DescriptionMode','auto',...
        'Visible','on',...
        'Serializable','on',...
        'HandleVisibility','off',...
        'TransformForPrintFcnImplicitInvoke','on',...
        'TransformForPrintFcnImplicitInvokeMode','auto');
%          ,...

        hs.fig1 = get(hs.MeterAltDiameter,'zlabel');

        set(hs.fig1,...
        'Parent',hs.MeterAltDiameter,...
        'Units','data',...
        'FontUnits','points',...
        'DecorationContainer',[],...
        'DecorationContainerMode','auto',...
        'Color',[0 0 0],...
        'ColorMode','auto',...
        'Position',[0 0 0],...
        'PositionMode','auto',...
        'String',blanks(0),...
        'Interpreter','tex',...
        'Rotation',0,...
        'RotationMode','auto',...
        'FontName','Helvetica',...
        'FontSize',10,...
        'FontAngle','normal',...
        'FontWeight','normal',...
        'HorizontalAlignment','right',...
        'HorizontalAlignmentMode','auto',...
        'VerticalAlignment','middle',...
        'VerticalAlignmentMode','auto',...
        'EdgeColor','none',...
        'LineStyle','-',...
        'LineWidth',0.5,...
        'BackgroundColor','none',...
        'Margin',1,...
        'Clipping','off',...
        'Layer','middle',...
        'LayerMode','auto',...
        'FontSmoothing','on',...
        'FontSmoothingMode','auto',...
        'DisplayName',blanks(0),...
        'IncludeRenderer','on',...
        'IsContainer','off',...
        'IsContainerMode','auto',...
        'HelpTopicKey',blanks(0),...
        'ButtonDownFcn',blanks(0),...
        'BusyAction','queue',...
        'Interruptible','on',...
        'DeleteFcn',blanks(0),...
        'Tag',blanks(0),...
        'HitTest','on',...
        'PickableParts','visible',...
        'PickablePartsMode','auto',...
        'XLimInclude','on',...
        'YLimInclude','on',...
        'ZLimInclude','on',...
        'CLimInclude','on',...
        'ALimInclude','on',...
        'Description','AxisRulerBase Label',...
        'DescriptionMode','auto',...
        'Visible','off',...
        'Serializable','on',...
        'HandleVisibility','off',...
        'TransformForPrintFcnImplicitInvoke','on',...
        'TransformForPrintFcnImplicitInvokeMode','auto');


        hs.ButtonsPanel = uipanel(...
        'Parent',hs.fig,...
        'FontUnits',get(0,'defaultuipanelFontUnits'),...
        'Units','characters',...
        'Title',blanks(0),...
        'Position',[59 40 41.2 3.84615384615385],...
        'Tag','ButtonsPanel',...
        'Clipping','off'...
         );

        hs.CalcButton = uicontrol(...
        'Parent',hs.ButtonsPanel,...
        'FontUnits',get(0,'defaultuicontrolFontUnits'),...
        'Units','characters',...
        'String','Calculate',...
        'Position',[2.4 0.846153846153846 15.6 1.92307692307692],...
        'Children',[],...
        'Tag','RunCalcs'...
         );

        hs.PlotButton = uicontrol(...
        'Parent',hs.ButtonsPanel,...
        'FontUnits',get(0,'defaultuicontrolFontUnits'),...
        'Units','characters',...
        'String','Plot',...
        'Position',[22 0.846153846153846 15.6 1.92307692307692],...
        'Children',[],...
        'Tag','GenPlots'...
         );

        appdata = [];
        appdata.lastValidTag = 'Diameter';
        appdata.PropertyMetaData = {  {  'DataPropertyDimension' 'DataPropertyConditionedDimension' 'DataPropertySource' 'BackgroundColorPropertyDimension' 'ColumnNameTyped' 'RowNameTyped' } {  [] 'DataExisting' [] {  'Diameter'  } {  'Start' 'Step' 'End' } } };

     
        hs.DiameterPlotTable = uitable(...
        'Parent',hs.fig,...
        'Units','character',...
        'BackgroundColor',[1 1 1;0.96078431372549 0.96078431372549 0.96078431372549],...
        'ColumnName',{'Diameter Plot Range'},...
        'ColumnWidth',{  'auto' },...
        'RowName',{'Start'; 'Step'; 'End'},...
        'Position',[58.4 49.0 38.0 6.1],...
        'ColumnEditable',true,...
        'ColumnFormat',{  [] },...
        'Data',[10.5;0.1;13.5],...
        'Children',[],...
        'Tag','Diameter',...
        'UserData',[]...
         );
     
        appdata = [];
        appdata.lastValidTag = 'WeatherData';
        appdata.PropertyMetaData = {  {  'DataPropertyDimension' 'DataPropertyConditionedDimension' 'DataPropertySource' 'BackgroundColorPropertyDimension' 'ColumnNameTyped' 'RowNameTyped' } {  [] 'DataExisting' [] {  'WeatherData' } {  'Temperature' 'DewPoint' 'Pressure' } } };
     
        hs.WeatherDataTable = uitable(...
        'Parent',hs.fig,...
        'Units','character',...
        'BackgroundColor',[1 1 1;0.96078431372549 0.96078431372549 0.96078431372549],...
        'ColumnName',{ 'Local Data' },...
        'ColumnWidth',{  'auto'  },...
        'RowName',{'Temperature'; 'DewPoint'; 'Presssure'},...
        'Position',[2.4 49 55.2 6.1],...
        'ColumnEditable',true,...
        'ColumnFormat',{ [] },...
        'Data',[21; 15; 1013.25],...
        'Children',[],...
        'Tag','WeatherData',...
        'UserData',[]...
         );
     
     hs.LaunchDataTable = uitable(...
        'Parent',hs.fig,...
        'Units','character',...
        'BackgroundColor',[1 1 1;0.96078431372549 0.96078431372549 0.96078431372549],...
        'ColumnName',{  'Data' },...
        'ColumnWidth',{ 68.5 },...
        'RowName',{'Launch Altitude'; 'Balloon Temperature'; 'Helium Mass'; 'Payload Mass'; 'Duct Tape Factor' },...
        'Position',[2.4 40 56 8.8],...
        'ColumnEditable',true,...
        'ColumnFormat',{ [] },...
        'Data',[0; 75; 2.47; 8.5; 1.1],...
        'Children',[],...
        'Tag','AWOSData',...
        'UserData',[]...
         );
     
        hs.LiftTable = uitable(...
        'Parent',hs.fig,...
        'Units','characters',...
        'BackgroundColor',[1 1 1;0.96078431372549 0.96078431372549 0.96078431372549],...
        'ColumnName',{'Local Data' },...
        'ColumnWidth',{  'auto' 'auto' },...
        'Position',[16.6 33 36.8 4.76923076923077],...
        'ColumnEditable',[false],...
        'ColumnFormat',{ [] },...
        'Data',[0.0;0.0],...
        'Children',[],...
        'Tag','Lift',...
        'UserData',[]...
         );
     
        hs.LiftTabelLabel = uicontrol(...
        'Parent',hs.fig,...
        'FontUnits',get(0,'defaultuicontrolFontUnits'),...
        'Units','characters',...
        'String','Lift in pounds',...
        'Style','text',...
        'Position',[22.2 38 27.6 1.15384615384615],...
        'Children',[],...
        'Tag','text28'...
         );

        hs.DeltaLiftTable = uitable(...
        'Parent',hs.fig,...
        'Units','characters',...
        'BackgroundColor',[1 1 1;0.96078431372549 0.96078431372549 0.96078431372549],...
        'ColumnName',{  'Local Data' },...
        'ColumnWidth',{  'auto' 'auto' },...
        'Position',[97 33 37 4.61538461538461],...
        'ColumnEditable',[false],...
        'ColumnFormat',{ [] },...
        'Data',[0.0;0.0],...
        'Children',[],...
        'Tag','Delta',...
        'UserData',[]...
         );
     
        hs.DeltaLiftTableLabel = uicontrol(...
        'Parent',hs.fig,...
        'FontUnits',get(0,'defaultuicontrolFontUnits'),...
        'Units','characters',...
        'String','Delta Lift [lbs]',...
        'Style','text',...
        'Position',[102.2 38 27.6 1.15384615384615],...
        'Children',[],...
        'Tag','text29'...
         );

        hs.AscentRateTable = uitable(...
        'Parent',hs.fig,...
        'Units','characters',...
        'BackgroundColor',[1 1 1;0.96078431372549 0.96078431372549 0.96078431372549],...
        'ColumnName',{ 'Local Data' },...
        'ColumnWidth',{  'auto' 'auto' },...
        'Position',[136 33 37 4.61538461538461],...
        'ColumnEditable',[false],...
        'ColumnFormat',{  [] },...
        'Data',[0.0; 0.0],...
        'Children',[],...
        'Tag','Speed',...
        'UserData',[]...
         );
     
        hs.AscentRateTableLabel = uicontrol(...
        'Parent',hs.fig,...
        'FontUnits',get(0,'defaultuicontrolFontUnits'),...
        'Units','characters',...
        'String','Ascent Rate [m/s]',...
        'Style','text',...
        'Position',[139.8 38 27.6 1.15384615384615],...
        'Children',[],...
        'Tag','text30'...
         );
     
        hs.WeightTable = uitable(...
        'Parent',hs.fig,...
        'Units','characters',...
        'ColumnName',{  'Payload Weight' },...
        'ColumnWidth',{  'auto' },...
        'RowName',{  'True'; 'w/factor' },...
        'Position',[57.4 33 36.2 5],...
        'ColumnEditable',false,...
        'ColumnFormat',{  [] },...
        'Data',[0.0;0.0],...
        'Children',[],...
        'Tag','Weight',...
        'UserData',[]...
         );
%tank calc stuff
        hs.TankMassCalcPanel = uipanel(...
        'Parent',hs.fig,...
        'FontUnits',get(0,'defaultuipanelFontUnits'),...
        'Units','characters',...
        'TitlePosition','centertop',...
        'Title','Tank Mass Calculator',...
        'Position',[101.8 40 63 15.25],...
        'Tag','TankMassCalcPanel',...
        'Clipping','off'...
         );

        appdata = [];
        appdata.lastValidTag = 'Tank1';
        appdata.PropertyMetaData = {  {  'DataPropertyDimension' 'DataPropertyConditionedDimension' 'DataPropertySource' 'BackgroundColorPropertyDimension' 'ColumnNameTyped' 'RowNameTyped' } {  [] [] 'DataExisting' [] {  'Tank 1 Start' 'Tank 1 End' } {  'Pressure' 'Temperature' } } };

        hs.Tank1Table = uitable(...
        'Parent',hs.TankMassCalcPanel,...
        'Units','characters',...
        'BackgroundColor',[1 1 1;0.96078431372549 0.96078431372549 0.96078431372549],...
        'ColumnName',{  'Tank 1 Start'; 'Tank 1 End' },...
        'ColumnWidth',{  'auto' 'auto' },...
        'RowName',{  'Pressure'; 'Temperature' },...
        'Position',[3.8 9 55.2 4.7],...
        'ColumnEditable',[true true],...
        'ColumnFormat',{  [] [] },...
        'Data',[2500 100;70 60],...
        'Children',[],...
        'Tag','Tank1',...
        'UserData',[]...
         );

        appdata = [];
        appdata.lastValidTag = 'Tank2';
        appdata.PropertyMetaData = {  {  'DataPropertyDimension' 'DataPropertyConditionedDimension' 'DataPropertySource' 'BackgroundColorPropertyDimension' 'ColumnNameTyped' 'RowNameTyped' } {  [] [] 'DataExisting' [] {  'Tank 2 Start' 'Tank 2 End' } {  'Pressure' 'Temperature' } } };

        hs.Tank2Table = uitable(...
        'Parent',hs.TankMassCalcPanel,...
        'Units','characters',...
        'ColumnName',{  'Tank 2 Start'; 'Tank 2 End' },...
        'ColumnWidth',{  'auto' 'auto' },...
        'RowName',{  'Pressure'; 'Temperature' },...
        'Position',[3.8 4 55.2 4.7],...
        'ColumnEditable',[true true],...
        'ColumnFormat',{  [] [] },...
        'Data',[2500 100;70 60],...
        'Children',[],...
        'Tag','Tank2',...
        'UserData',[]...
         );

        hs.TankCalcBtn = uicontrol(...
        'Parent',hs.TankMassCalcPanel,...
        'FontUnits',get(0,'defaultuicontrolFontUnits'),...
        'Units','characters',...
        'String','Calculate',...
        'Position',[3.6 0.5 22.4 2.23076923076923],...
        'Children',[],...
        'Tag','HeliumTankCalc'...
         );
     
        hs.TankMassValueLabel = uicontrol(...
        'Parent',hs.TankMassCalcPanel,...
        'FontUnits',get(0,'defaultuicontrolFontUnits'),...
        'Units','characters',...
        'String','0',...
        'Style','text',...
        'Position',[30 1.0 12.2 1.15384615384615],...
        'Children',[],...
        'Tag','HeliumTankMass'...
         );

        hs.TankMassLabel = uicontrol(...
        'Parent',hs.TankMassCalcPanel,...
        'FontUnits',get(0,'defaultuicontrolFontUnits'),...
        'Units','characters',...
        'String','kg',...
        'Style','text',...
        'Position',[40 1.0 2.8 1.15384615384615],...
        'Children',[],...
        'Tag','text27'...
         );

       
    end

    function GenPlots_Callback(~,~,hs)
        
        %Creating the Diameter Range
        Range = get(hs.DiameterPlotTable,'Data');
        Diameter = Range(1):Range(2):Range(3);


        % calculate values to plot
        [AWOSBurst,LocalBurst] = RunCalcs_Callback(1,1, hs);
        
        axes(hs.FeetAltDiameter)
        cla;
        hold on
        grid on 
        title 'Burst Diameter vs. Burst Altitude'
        xlabel 'meters'
        ylabel 'feet'
        plot(Diameter,AWOSBurst(:,1),'r')
        plot(Diameter,LocalBurst(:,1),'b')
        plot(Diameter,AWOSBurst(:,2),'g')
        plot(Diameter,LocalBurst(:,2),'k')
        legend('AWOS Standard','Local Standard','AWOS Method','Local Method','Location','Southeast')
        hold off

        axes(hs.MeterAltDiameter)
        cla;
        hold on
        grid on 
        title 'Burst Diameter vs. Burst Altitude in meters'
        xlabel 'meters'
        ylabel 'meters'
        plot(Diameter,AWOSBurst(:,3),'r')
        plot(Diameter,LocalBurst(:,3),'b')
        plot(Diameter,AWOSBurst(:,4),'g')
        plot(Diameter,LocalBurst(:,4),'k')
        legend('AWOS Standard','Local Standard','AWOS Method','Local Method','Location','Southeast')
        hold off
    end

    function rtn = getNumericVal(handle)
    % gets the string property of the handle argument and converts the
    % value to a numeric value
        rtn = get(handle,'String');
        rtn = str2double(rtn);
    end

    function [LocalBurst] = RunCalcs_Callback(~, ~, hs)

        %Creating the Diameter Range
        Range = get(hs.DiameterPlotTable,'Data'); %Start Step End
        LaunchData = get(hs.LaunchDataTable,'Data'); %Launch Altitude; Balloon Temperature; Helium Mass; Payload Mass; Duct Tape Factor
        
        Diameter = Range(1):Range(2):Range(3);
        
        %Creating the Mass with the safety factor
        TotalMass = LaunchData(4) * LaunchData(5);

        %Creating the Data Vector for AWOSMethod
        Weather = get(hs.WeatherDataTable,'Data');

        %Creating the Data Vecotr for LocalMethod
        LocalData = [LaunchData(1);Weather(1,2);Weather(2,2);Weather(3,2);LaunchData(2);TotalMass];
        
        %Running LocalMethod
        [LocalLift, LocalBurst, LocalSpeed, LocalDelta] = LocalMethod(LocalData,Diameter,LaunchData(3));

        Weight = [LaunchData(4);TotalMass]*2.2046226218;%Converting to pounds for the weight to display

        %Putting the selected data into the table for display
        set(hs.LiftTable,'data',[LocalLift])
        set(hs.DeltaLiftTable,'data',[LocalDelta])
        set(hs.AscentRateTable,'data',[LocalSpeed])
        set(hs.WeightTable,'data',Weight)

    end

    function hs = setupCallbacks(hs)
    % adds callbacks to ui elements   
    % Note: callbacks must be setup after handle structure is fully
    % initalized
    
        set(hs.TankCalcBtn,'Callback',{@HeliumTankCalc_Callback,hs});
        set(hs.CalcButton,'Callback',{@RunCalcs_Callback,hs});
        set(hs.PlotButton,'Callback',{@GenPlots_Callback,hs});
        set(hs.BalloonMenuCalcBtn,'Callback',{@GenPlots_Callback,hs});
        set(hs.BalloonMenuPlotBtn,'Callback',{@GenPlots_Callback,hs});
        set(hs.BalloonMenuPlotBtn,'Callback',{@closefcn,hs});
        set(hs.save,'ClickedCallback',{@savebutton,hs});
        set(hs.load,'ClickedCallback',{@loadbutton,hs});
    end

    function closefcn(~,~,hs)
    % callback for closing the window
    
        close(hs.fig);
    end

    function HeliumTankCalc_Callback(~,~,hs)
    % performs helium tank calculations

        Tank1 = get(hs.Tank1Table,'data');
        Tank2 = get(hs.Tank2Table,'data');
        TankMass1 = HeliumMassCalc(Tank1(1,1),Tank1(1,2),Tank1(2,1),Tank1(2,2));
        TankMass2 = HeliumMassCalc(Tank2(1,1),Tank2(1,2),Tank2(2,1),Tank2(2,2));
        HeliumTankMass = TankMass1 + TankMass2;
        set(hs.TankMassValueLabel, 'String', HeliumTankMass )
    end

    function setdefaultvals(hs)
    % sets the default values of each of the input fields
        
       %Intial data
        set(hs.WeatherDataTable, 'Data', [21; 15; 1013.25])
        set(hs.DiameterPlotTable, 'Data', [10.5; 0.1; 13.5] )
        set(hs.LaunchDataTable, 'Data', [0; 75; 2.47; 8.5; 1.1])
        

    end

    function savebutton(~,~,hs)
        %function for saveing data
        FileName = uiputfile('default.lite','Save File Data');
        WeatherData = get(hs.WeatherDataTable, 'Data');
        PlotData = get(hs.DiameterPlotTable, 'Data');
        LaunchData = get(hs.LaunchDataTable, 'Data');
        Tank1 = get(hs.Tank1Table,'Data');
        Tank2 = get(hs.Tank2Table,'Data');
        
        %Building the data to save
        FileData = [WeatherData(:,1); WeatherData(:,2); PlotData; LaunchData; Tank1(:,1); Tank1(:,2); Tank2(:,1); Tank2(:,2)];
       
        File = fopen(FileName,'wt');
        for n = 1:length(FileData)
           fprintf(File,'%f\n',FileData(n));
        end
        fclose(File);
    end

    function loadbutton(~,~,hs)
        %function for loading data
        FileName = uigetfile({'*.lite'},'File Selector');
        File = fopen(FileName,'r');
        FileData = fscanf(File,'%f\n',[1 Inf]);
        fclose(File);
        
        if (length(FileData) == 22)
        
        %Building data sets
        WeatherData = [FileData(1:3)', FileData(4:6)' ];
        PlotData = FileData(7:9)';
        LaunchData = FileData(10:14)';
        Tank1 = [FileData(15:16)', FileData(17:18)'];
        Tank2 = [FileData(19:20)', FileData(21:22)'];
        
        %Loading into GUI
        set(hs.WeatherDataTable,'Data', WeatherData)
        set(hs.DiameterPlotTable,'Data', PlotData)
        set(hs.LaunchDataTable,'Data', LaunchData)
        set(hs.Tank1Table,'Data',Tank1)
        set(hs.Tank2Table,'Data',Tank2)
        
        else
        disp('Invalid File Selected')
        end

        
    end

    %Calculates the mass of the Helium from a K sized tank
    %PressureTankStart (PTS) in PSI
    %PressureTankEnd (PTE) in PSI
    %TempuratureTankStart (TTS) in Fahrenheit
    %TempuratureTankEnd (TTE) in Fahrenheit
    %All internal Caluclations in SI units
    %Accepts Vector input for all values, must be same lenght
    function Mass_kg = HeliumMassCalc(PTS,PTE,TTS,TTE)

    %Constants
    VolumeTank = 48.99/1000; %Liters to Cubic meters Air gas says 49.8
    M = 4.002602;
    Rbar = 8314.4598;

    %% Input Converstion Layer

    PressureTankStart_Pa = PTS*6894.75728; %PSI to Pa
    PressureTankEnd_Pa = PTE*6894.75728 ; %PSI to Pa
    TempTankStart_K = (TTS-32)*5/9+273.15; %F to K
    TempTankEnd_K = (TTE-32)*5/9+273.15; %F to K

    %% Math Layer
    Mass_kg = (PressureTankStart_Pa./TempTankStart_K - PressureTankEnd_Pa./TempTankEnd_K)*VolumeTank*M/Rbar;

    %% Output Conversion Layer

    %no output conversion needed

    end


%     function rtnflg = numericEntryValidate(hObject,~,~)
%         
%         val = str2double(get(hObject, 'String'));
%         rtnflg = true;
%         if isnan(val)
%             rtnflg = false;
%         end 
%         % FIXME: add more
%     end
% 
%     function ducttapevalidation()
%         DuctTapeFactor = str2double(get(hObject, 'String'));
%         
%         if numericEntryValidate(DuctTapeFactor)
%             set(hObject, 'String', 1.1);
%             errordlg('Input must be a number','Error');
%         end 
%     end

    %Uses Local On-Site Measurements
    %The function expects a Data vector that contains the following information
    %1 [Launch Altitude;
    %2  Local Tempurature; (C)
    %3  Local Dew Point; (C)
    %4  Local Pressure; (mbar)
    %5  Balloon Temperature; (F) 
    %6  Weight (lbs)
    %  
    % The next input is a vector for burst diameter in meters
    %
    % Mass of helium in kg
    %
    % Using this data the function will generate the lift expected at the
    % launch altitude and a vector of altitudes corrisponding to burst diameter
    % And ascent rate in meters per second
    % the speed is predicted ascent rate at launch altitiude.
    % Lift, Speed, and DeltaLift give the "Standard" Value First, Followed by
    % the "Custom" Value
    %
    %Depedencies:
    % StandAtmo1976, CustomStandAtmo1976, MoistDensity
    function [lift, alt, Speed, liftdelta] = LocalMethod(Data,Dburst,mass)
    %% Input Conversion Layer
    LaunchAlt_m = Data(1); %expected in meters, no conversion nessisary
    Temp_K = (Data(2))+273.15; %expecting Fahrenheit, converting to Kelvin
    Dewpoint_K = (Data(3))+273.15; %expecting Fahrenheit, converting to Kelvin
    Pressure_Pa = Data(4)*100; %expecting milibars, converted to Pascals
    BT_K = (Data(5)-32)*5/9+273.15; %expecting Fahrenheit, converting to Kelvin
    payloadmass_kg = Data(6); %expecting kg no converting needed

    %Dburst = Dburst; %expected in meters, no conversion nessisary

    mass_kg = mass; %expecting kg, no conversion nessisary
    %% Math Layer
    [A1, T1, P1, ~] = StandAtmo1976(0,288.15,101325); %Standard table
    %If the density table is needed, use D1
    PdT1 = P1./T1;
    [A2, T2, P2, ~] = CustomStandAtmo1976(LaunchAlt_m,Temp_K,Dewpoint_K,Pressure_Pa);
    %If the density table is needed, use D2
    PdT2 = P2./T2;
    g0 = 9.80665; %m/s^2
    MolarHelium = 4.002602;
    MolarAir = 28.9645;
    %MolarWater = 18.01528;
    Rbar = 8314.4598;

    weight_N = payloadmass_kg*g0;

    %lift calculation
    pHe = (Pressure_Pa.*MolarHelium)./(BT_K.*Rbar); %M for He and R value
    %pAir(1,1) = interp1(A1,D1,DensityAlt_m); %Density Altitude uses humidity, which is best
    pAir(1,1) = MoistDensity(Temp_K,Dewpoint_K,Pressure_Pa);
    pAir(2,1) = Pressure_Pa*MolarAir/( Temp_K*Rbar); %from Conditions

    Pressure_Pa = [Pressure_Pa;Pressure_Pa];

    BV = BT_K./Pressure_Pa*mass_kg*(Rbar/MolarHelium); %using temp and press to get volume
    lift = BV.*(pAir-pHe)*g0; 

    %Burst Calc

    % sigma = 5.6703*10^(-8);% (W/m^2K^4)
    % emis = .86;
    % SpHe = 2.01/1000;
    % travel = launchalt:100:47000;
    % BalloonTemp = ones(length(travel),1);
    % BalloonTemp(1) = BT;
    % for i = 1:length(travel)
    %     Tair = interp(A2,T2,travel(i));
    %     P = interp(A2,P2,travel(i));
    %     V = mass*Rbar/MolarHelium*BalloonTemp(i)/P;
    %     SA = 4*pi*((3*V)/(4*pi))^(2/3);
    %     BalloonTemp(i+1) = (sigma*emis*(BalloonTemp(i)^4-Tair^4)*SA*25/(mass*SpHe))-BalloonTemp(i);
    % end

    Vburst = 4/3*pi*(Dburst/2).^3;
    AltBurst_m = zeros(length(Vburst),2); %pre alocating for speed
    for n = 1:length(Vburst)
        AltBurst_m(n,1) = interp1(PdT1,A1, ((mass_kg*Rbar)./(MolarHelium*Vburst(n))) ); 
        %interpolating from the table altitdue based on P/T   ^This=P/T
    end

    for n = 1:length(Vburst)
        AltBurst_m(n,2) = interp1(PdT2,A2, ((mass_kg*Rbar)./(MolarHelium*Vburst(n))) ); 
        %interpolating from the table altitdue based on P/T   ^This=P/T
    end

    liftdelta = lift-weight_N;

    %A lot of other preditiction programs seems to assume that the acsent rate
    %is constant, so I will assume that the acsent rate at launch is constant
    Speed = [5;5]; %m/s second starting value for interative process
    hamburgerFactor = 0.4; %Balloon flattens in flow, increaseing area
    for n = 1:10
        area = (pi*(BV./pi*3/4).^(2/3)) .* hamburgerFactor .* Speed; %drag area of balloon
        Re = pAir.*Speed.*(BV./pi.*0.75).^(1/3)./(1.85e-5);
        Cd = 24./Re + (2.6*(Re./5))./(1+(Re./5).^1.52) + (.411*(Re./263000).^-7.94)./(1+(Re./263000).^-8.00) + (Re.^0.80)./461000;
        Speed = sqrt((2*(liftdelta))./(pAir.*((area.*Cd)+((.09*weight_N/g0)*1.05))));
    end

    %% Output Conversion Layer
    lift = lift*0.22480894244; %converting the newtons of lift to pounds
    AltBurst_ft = AltBurst_m*3.280839895; %converting altitude in meters to feet
    %speed = speed %no conversion needed
    liftdelta = liftdelta*0.22480894244; %converting the newtons to pounds

    %% Output Additions
    alt = [AltBurst_ft AltBurst_m];

    end

    %Calculates the Density of Moist Air
    %Using the Herman Wobus Equation
    %Inputs are Temperature, Dew Point Temperature, Pressure
    %Units are SI for use inside functions (Kelvin,Kelvin,Pascals)
    function [Density] = MoistDensity(Temp,DewPoint,Pressure)
    %% Input Conversion
    Temp_K = Temp; %Already in Kelvin
    Dewpoint_C = DewPoint-273.15;
    Pressure_Pa = Pressure; %Already in Pascals

    %% Math Layer

    %Constants
    MolarAir = 28.9645;
    MolarWater = 18.01528;
    Rbar = 8314.4598;

    eso = 6.1078;
    c0 = 0.99999683;
    c1 = -0.90826951e-2;
    c2 = 0.78736169e-4;
    c3 = -0.61117958e-6;
    c4 = 0.43884187e-8;
    c5 = -0.29883885e-10;
    c6 = 0.21874425e-12;
    c7 = -0.17892321e-14;
    c8 = 0.11112018e-16;
    c9 = -0.30994571e-19;

    %Calculations
    p = c0 + Dewpoint_C.*(c1 + Dewpoint_C.*(c2 + Dewpoint_C.*(c3 + Dewpoint_C.*(c4 + Dewpoint_C.*(c5 + Dewpoint_C.*(c6 + Dewpoint_C.*(c7 + Dewpoint_C.*(c8 + Dewpoint_C.*(c9) ) ) ) ) ) ) ) );
    Pwater_Pa = (eso ./ p.^8)*100;
    Pdryair_Pa  = Pressure_Pa - Pwater_Pa;
    Density = ( (Pdryair_Pa ./ (Rbar/MolarAir * Temp_K)) + (Pwater_Pa ./ (Rbar/MolarWater * Temp_K)) );

    %% Output Converstion

    %None Needed
    end

    %Standard Atmosphere 1976 Table
    %Accepts the altitude you're at (in meters), the temperature (kelvin, used
    %in calculations), and pressure (Pascals)
    %at the altitude you indicated, and generates a standard atmosphere table
    %based on the thermal gradiants in the 1976 model.
    %Outputs are  [Altitude Temperature Pressure Density]
    %Stops at 47 km in altitude. 
    %The altitude indicated (you are at) must be below 11 km
    %WARNING Density function shows significant bias
    function [Alt, T, P, D] = StandAtmo1976(Altat,Temp,Pressure)

    g0 = 9.80665;  %Geopotential Acceleration
    M = 28.9644; %molecular mass of air 28.9645 for modern data Legacy:28.9644
    R = 8314.32; %SI R value 8314.459848 for modern data Legacy:8314.32
    stepalt=100; %step size for the tables. 

    Density = 1.225;%(Pressure*M)/(Temp*R); %Calculating air denisty based on ideal gas law

    R1 = -1000:stepalt:11000; %Altitude range for 1st thermal region
    L1 = -6.5e-3; %thermal gradiant
    T1 = Temp+L1*(R1-Altat); %tempurature calculation for altitudes
    P1 = Pressure.*((T1)/(Temp)).^-((g0*M)/(R*L1)); %pressure calculation for altitudes
    %D1 = (P1*M)./(T1*R);
    D1 = Density.*(T1/Temp).^(-((g0*M)/(L1*R)) + 1);

    R2 = (11000+stepalt):stepalt:20000; %altitude range for 2nd thermal region
    L2 = 0.0; %thermal gradiant, isothermal region
    T2 = T1(end)+L2.*(R2-R1(end)); %still going through the motions for conistecy
    P2 = P1(end)*(exp(-(g0*M*(R2-R1(end)))/(R*T1(end)))); %pressure calculation different for isothermal region
    %D2 = (P2*M)./(T2*R);
    D2 = D1(end)*exp(-(g0*M*R2-R1(end))/(R*T1(end)));

    R3 = (20000+stepalt):stepalt:32000; %altitude range for 3rd thermal region
    L3 = 1.0e-3; %thermal gradiant
    T3 = T2(end)+L3*(R3-R2(end)); %tempurature calculation for altitudes
    P3 = P2(end)*((T3)/(T2(end))).^(-(g0*M)/(R*L3));
    %D3 = (P3*M)./(T3*R);
    D3 = D2(end).*(T3/T2(end)).^(-((g0*M)/(L3*R)) + 1);

    R4 = (32000+stepalt):stepalt:47000; %altitude range for 4th thermal region
    L4 = 2.8e-3; %thermal gradiant
    T4 = T3(end)+L4.*(R4-R3(end)); %tempurature calculation for altitudes
    P4 = P3(end)*((T4)/(T3(end))).^(-(g0*M)/(R*L4));
    %D4 = (P4*M)./(T4*R);
    D4 = D3(end).*(T4/T3(end)).^(-((g0*M)/(L4*R)) + 1);

    Alt = [R1'; R2'; R3'; R4'];
    T = [T1'; T2'; T3'; T4'];
    P = [P1'; P2'; P3'; P4'];
    D = [D1'; D2'; D3'; D4'];

    end

end






